{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Feedbackoptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/Statistics/Statistics.js","Components/Feedbackoptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/Section/Section.js","Components/Container/Container.js","Components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","FeedbackOptions","onLeaveFeedback","type","btn","name","onClick","prototype","PropTypes","func","isRequired","Notification","message","notification","Section","title","children","section","Container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","target","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,WAAa,iC,iBCA/BD,EAAOC,QAAU,CAAC,IAAM,+B,mBCAxBD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,gIC0BfC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,qBAAIC,UAAWC,IAAOC,WAAtB,kBAAwCP,KACxC,qBAAIK,UAAWC,IAAOC,WAAtB,qBAA2CN,KAC3C,qBAAII,UAAWC,IAAOC,WAAtB,iBAAuCL,KACvC,qBAAIG,UAAWC,IAAOC,WAAtB,mBAAyCJ,KACzC,qBAAIE,UAAWC,IAAOC,WAAtB,+BACqBH,EADrB,a,gCCRO,SAASI,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,gCACE,wBACEC,KAAK,SACLL,UAAWC,IAAOK,IAClBC,KAAK,OACLC,QAASJ,EAJX,kBAQA,wBACEC,KAAK,SACLL,UAAWC,IAAOK,IAClBC,KAAK,UACLC,QAASJ,EAJX,qBAQA,wBACEC,KAAK,SACLL,UAAWC,IAAOK,IAClBC,KAAK,MACLC,QAASJ,EAJX,oBAYND,EAAgBM,UAAY,CAC1Bd,KAAMe,IAAUC,KAAKC,WACrBhB,QAASc,IAAUC,KAAKC,WACxBf,IAAKa,IAAUC,KAAKC,Y,oBC1BPC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAId,UAAWC,IAAOc,aAAtB,SAAqCD,K,gBCWxBE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASlB,UAAWC,IAAOkB,QAA3B,UACE,6BAAKF,IACJC,M,iBCKUE,EARG,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAChB,qBAAKlB,UAAWC,IAAOmB,UAAvB,SAAmCF,KCGtB,SAASG,IACtB,MAAwBC,mBAAS,GAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOzB,EAAP,KAAY4B,EAAZ,KAuBMC,EAAqB/B,EAAOE,EAAMD,EAClC+B,EAAkCC,KAAKC,MAC1ClC,EAAO+B,EAAsB,KAGhC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAACd,EAAD,CAAiBC,gBA7BC,SAAA0B,GAGtB,OAFiBA,EAAEC,OAAXxB,MAGN,IAAK,OACHgB,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHR,GAAW,SAAAQ,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHP,GAAO,SAAAO,GAAS,OAAIA,EAAY,WAkBlC,cAAC,EAAD,CAASf,MAAM,aAAf,SACGS,EACC,cAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,EACP3B,mBAAoB4B,IAGtB,cAAC,EAAD,CAAcb,QAAQ,2B,YC/ChCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,W","file":"static/js/main.1f3f7342.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__DRvoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3jXiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3EABF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3p3W7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2B2mk\"};","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li className={styles.statistics}>Good:{good}</li>\r\n        <li className={styles.statistics}>Neutral:{neutral}</li>\r\n        <li className={styles.statistics}>Bad:{bad}</li>\r\n        <li className={styles.statistics}>Total:{total}</li>\r\n        <li className={styles.statistics}>\r\n          Positive feedback:{positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btn}\r\n        name=\"good\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btn}\r\n        name=\"neutral\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btn}\r\n        name=\"bad\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.prototype = {\r\n  good: PropTypes.func.isRequired,\r\n  neutral: PropTypes.func.isRequired,\r\n  bad: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <h3 className={styles.notification}>{message}</h3>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport Statistics from './Statistics';\r\nimport FeedbackOptions from './Feedbackoptions';\r\nimport Notification from './Notification';\r\nimport Section from './Section';\r\nimport Container from './Container';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onLeaveFeedback = e => {\r\n    const { name } = e.target;\r\n\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = good + bad + neutral;\r\n  const countPositiveFeedbackPercentage = Math.round(\r\n    (good / countTotalFeedback) * 100,\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions onLeaveFeedback={onLeaveFeedback} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback}\r\n            positivePercentage={countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// class oldApp extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n//   onLeaveFeedback = feedback => {\r\n//     this.setState(prevState => ({\r\n//       [feedback]: prevState[feedback] + 1,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const { good, neutral, bad } = this.state;\r\n\r\n//     const countTotalFeedback = good + bad + neutral;\r\n//     const countPositiveFeedbackPercentage = Math.round(\r\n//       (good / countTotalFeedback) * 100,\r\n//     );\r\n//     const options = Object.keys(this.state);\r\n\r\n//     return (\r\n//       <Container>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={options}\r\n//             onLeaveFeedback={this.onLeaveFeedback}\r\n//           />\r\n//         </Section>\r\n//         <Section title=\"Statistics\">\r\n//           {countTotalFeedback ? (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={countTotalFeedback}\r\n//               positivePercentage={countPositiveFeedbackPercentage}\r\n//             />\r\n//           ) : (\r\n//             <Notification message=\"No feedback given\" />\r\n//           )}\r\n//         </Section>\r\n//       </Container>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}